import org.apache.http.HttpEntity
import org.apache.http.client.methods.CloseableHttpResponse
import org.apache.http.client.methods.HttpPost
import org.apache.http.entity.ContentType
import org.apache.http.entity.mime.MultipartEntityBuilder
import org.apache.http.impl.client.CloseableHttpClient
import org.apache.http.impl.client.HttpClients

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.apache.httpcomponents:httpmime:4.5.13"
    }
}

/** For pre-releases and testers to be able to try the latest commits if they want.
 * If the builds start exceeding 8MB then we may want to upload to s3 instead and periodically clear.
 * TODO possibly add a task that announces when builds are made?
 * Though add a note that it may take a while for Curse to approve the files.
 */
task discordupload {
    // Check if its trying to upload the fabric dev copy as jar is release for forge but remapJar is for fabric.
    var jarTask = jar.getArchiveClassifier().get().endsWith("-dev") ? remapJar : jar
    dependsOn(jarTask)
    doLast {
        String discordWebhook = System.getenv("DISCORD_WEBHOOK")

        if(discordWebhook != null) {
            println("Logging Into Discord")

            CloseableHttpClient httpClient = HttpClients.createDefault()
            HttpPost uploadFile = new HttpPost(discordWebhook)

            MultipartEntityBuilder builder = MultipartEntityBuilder.create()
            if(version.toString().contains('canary')) {
                builder.addTextBody("content", "New canary Build")
            } else {
                builder.addTextBody("content", "New release build\n\n" +
                        "Current Features: <${project.github}/blob/${branch}/CHANGELOG.md>")
            }

            builder.addBinaryBody("file", file(jarTask.archiveFile).newInputStream(), ContentType.APPLICATION_OCTET_STREAM, jarTask.archiveName)

            HttpEntity multipart = builder.build()

            uploadFile.setEntity(multipart)
            CloseableHttpResponse response = httpClient.execute(uploadFile)
            response.getEntity()

            println("Posted build")

        } else {
            println("Discord webhook unspecified")
        }
    }
}
